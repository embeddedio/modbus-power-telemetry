{"version":3,"sources":["import_styles.js","modules/Header.js","modules/Sidebar.js","modules/Services.js","modules/charts/chart.js","modules/Dashboard.js","modules/History.js","modules/Settings.js","modules/test.js","App.js","serviceWorker.js","index.js"],"names":["applyStylesMenuButton","$","css","hasClass","removeClass","addClass","document","ready","click","Header","className","src","alt","id","type","data-toggle","Sidebar","to","style","textDecoration","href","aria-expanded","aria-controls","axios","require","getHistory","params","a","post","getDashboard","get","getSettings","response","data","saveSettings","getListSerialPort","console","log","MixedChart","props","getData","bind","interval","state","options","dataLabels","enabled","stroke","width","title","text","align","offsetX","xaxis","categories","yaxis","axisTicks","show","axisBorder","color","labels","tooltip","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","series","this","setInterval","clearInterval","Services","onChange","graph","name","p","q","s","setState","hours","height","React","Component","Dashboard","top","sumI","sumP","sumQ","sumS","handleChange","value","history","map","item","index","key","time_at","v1","v2","v3","i1","i2","i3","p1","p2","p3","q1","q2","q3","s1","s2","s3","rel","History","dateFrom","Date","setHours","getHours","dateTo","FlatpickrOptions","time_24hr","from","data-disable-time","onClick","date_at","Settings","optionChange","changeHandler","serialPort","settings","usb","refresh","modbusCodes","powerType","address","frequency","nextProps","prevState","option","match","urlOption","event","target","set","that","margin","paddingBottom","padding","i","textAlign","generalSetting","Test","App","exact","path","component","render","pathname","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"2TAoBI,SAASA,IAC6B,SAA3BC,IAAE,YAAYC,IAAI,OACbD,IAAE,YAAYE,SAAS,WACvBF,IAAE,YAAYC,IAAI,CAAC,KAAO,GAAG,MAAQ,KACpCD,IAAE,YAAYG,YAAY,YAE3BH,IAAE,YAAYC,IAAI,CAAC,KAAO,EAAE,MAAQ,SACpCD,IAAE,YAAYI,SAAS,WAGvBJ,IAAE,QAAQE,SAAS,qBACfF,IAAE,QAAQG,YAAY,qBAEtBH,IAAE,QAAQI,SAAS,qBAQvCJ,IAAEK,UAAUC,OAAM,WACdN,IAAE,sBAAsBO,OAAM,WAC1BR,OAEJC,IAAE,4BAA4BO,OAAM,WAChCR,U,kBCvBGS,MArBf,WACE,OACM,yBAAKC,UAAU,+EACX,yBAAKA,UAAU,qFACX,0BAAMA,UAAU,2BAA0B,yBAAKC,IAAI,mBAAmBC,IAAI,WAC1E,0BAAMF,UAAU,+BAA+BG,GAAG,2BAA0B,yBAAKF,IAAI,wBAAwBC,IAAI,YAErH,yBAAKF,UAAU,kDACf,4BAAQA,UAAU,kDAAkDI,KAAK,SAASC,cAAY,YAC1F,0BAAMF,GAAG,oBAAoBH,UAAU,kBAG3C,4BAASA,UAAU,kEAAkEI,KAAK,SAASC,cAAY,aAC3G,uBAAGL,UAAU,sB,QCkDdM,MA9Df,WACE,OACU,yBAAKN,UAAU,4BAA4BG,GAAG,WAC1C,wBAAIH,UAAU,OACV,wBAAIA,UAAU,wBACV,0BAAMA,UAAU,YACZ,yBAAKA,UAAU,qBACf,yBAAKC,IAAI,0BAA0BC,IAAI,YACvC,0BAAMF,UAAU,yBAEhB,yBAAKA,UAAU,uCACf,0BAAMA,UAAU,yBAAhB,iBACA,0BAAMA,UAAU,6BAAhB,oBAEA,uBAAGA,UAAU,4DAGrB,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,aAAaC,MAAO,CAACC,eAAe,SACzC,0BAAMT,UAAU,YACZ,0BAAMA,UAAU,cAAhB,aACA,uBAAGA,UAAU,mCAIzB,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,WAAWC,MAAO,CAACC,eAAe,SACvC,0BAAMT,UAAU,YACZ,0BAAMA,UAAU,cAAhB,WACA,uBAAGA,UAAU,2CAKzB,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWK,cAAY,WAAWK,KAAK,YAAYC,gBAAc,QAAQC,gBAAc,YAEhG,0BAAMZ,UAAU,cAAhB,YACA,uBAAGA,UAAU,eACb,uBAAGA,UAAU,sCAEjB,yBAAKA,UAAU,gBAAgBG,GAAG,YAC9B,wBAAIH,UAAU,4BACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,oBAAoBC,MAAO,CAACC,eAAe,SAChD,0BAAMT,UAAU,YAAhB,qBAGR,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,mBAAmBC,MAAO,CAACC,eAAe,SAC/C,0BAAMT,UAAU,YAAhB,kB,uFCrDlCa,EAAQC,EAAQ,IAETC,EAAU,uCAAG,WAAeC,GAAf,SAAAC,EAAA,sEACTJ,EAAMK,KAAK,eAAeF,GADjB,mFAAH,sDAIVG,EAAY,uCAAG,sBAAAF,EAAA,+EAEPJ,EAAMO,IAAI,kBAFH,iGAIb,MAJa,wDAAH,qDASZC,EAAW,uCAAG,4BAAAJ,EAAA,sEACFJ,EAAMO,IAAI,iBADR,cACnBE,EADmB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKXC,EAAY,uCAAG,WAAeD,GAAf,eAAAN,EAAA,sEACHJ,EAAMK,KAAK,gBAAgBK,GADxB,cACpBD,EADoB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAMZE,EAAiB,uCAAG,4BAAAR,EAAA,sEACRJ,EAAMO,IAAI,oBADF,cACzBE,EADyB,OAE7BI,QAAQC,IAAI,mBAAUL,EAASC,MAFF,kBAGtBD,EAASC,MAHa,2CAAH,qDCtBTK,E,YAEjB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,SAAW,KAChB,EAAKC,MAAQ,CACXC,QAAS,CACPC,WAAY,CACVC,SAAS,GAGXC,OAAQ,CACNC,MAAO,CAAC,EAAG,EAAG,IAEhBC,MAAO,CACLC,KAAM,qCACNC,MAAO,SACPC,QAAS,GAEXC,MAAO,CACLC,WAAY,IAEdC,MAAO,CACL,CACEC,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACNE,MAAO,WAETC,OAAQ,CACN1C,MAAO,CACLyC,MAAO,YAGXV,MAAO,CACLC,KAAM,iBACNhC,MAAO,CACLyC,MAAO,YAGXE,QAAS,CACPf,SAAS,IAIb,CACEgB,WAAY,SACZC,UAAU,EACVP,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACNE,MAAO,WAETC,OAAQ,CACN1C,MAAO,CACLyC,MAAO,YAGXV,MAAO,CACLC,KAAM,qBACNhC,MAAO,CACLyC,MAAO,aAKb,CACEG,WAAY,UACZC,UAAU,EACVP,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACNE,MAAO,WAETC,OAAQ,CACN1C,MAAO,CACLyC,MAAO,YAGXV,MAAO,CACLC,KAAM,oBACNhC,MAAO,CACLyC,MAAO,cAKfE,QAAS,CACPG,MAAO,CACLlB,SAAS,EACTmB,SAAU,UACVC,QAAS,GACTd,QAAS,KAGbe,OAAQ,CACNC,gBAAiB,OACjBhB,QAAS,KAGbiB,OAAQ,IAzGO,E,iFA6GfC,KAAK9B,UACL8B,KAAK5B,SAAW6B,YAAYD,KAAK9B,QAAQ,O,6CAI3CgC,cAAcF,KAAK5B,Y,oKAGI+B,I,QAAjBzC,E,SACWA,EAASC,OACtBqC,KAAK/B,MAAMmC,SAAS1C,EAASC,MACzB0C,EAAQ3C,EAASC,KAAK0C,MACbL,KAAK3B,MAAM0B,OACxBA,EAAS,CAAC,CACNO,KAAM,WACN9D,KAAM,SACNmB,KAAM0C,EAAM1C,KAAK4C,GAChB,CACDD,KAAM,aACN9D,KAAM,SACNmB,KAAM0C,EAAM1C,KAAK6C,GAChB,CACDF,KAAM,aACN9D,KAAM,SACNmB,KAAM0C,EAAM1C,KAAK8C,IAErBT,KAAKU,SACH,CACEpC,QAAS,CACTS,MAAO,CACHC,WAAYqB,EAAMM,QAGtBZ,OAAOA,K,qIAMf,OACE,yBAAKxD,GAAG,SACN,kBAAC,IAAD,CAAO+B,QAAS0B,KAAK3B,MAAMC,QAASyB,OAAQC,KAAK3B,MAAM0B,OAAQvD,KAAK,OAAOoE,OAAO,a,GAxJpDC,IAAMC,WCDzBC,E,YACjB,WAAY9C,GAAQ,IAAD,8BACf,4CAAMA,KAEDI,MAAQ,CACTV,KAAK,CAACqD,IAAI,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAEzC,EAAKC,aAAe,EAAKA,aAAalD,KAAlB,gBANL,E,0EASNmD,GACTtB,KAAKU,SAAS,CAAC/C,KAAK2D,M,+BAKpB,OACA,yBAAKlF,UAAU,cACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cACV,0BAAMA,UAAU,uDAChB,uBAAGA,UAAU,wBAFjB,gBAMJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,sDACX,yBAAKA,UAAU,yBACX,yBAAKC,IAAI,8BAA8BD,UAAU,oBAAoBE,IAAI,YACzE,wBAAIF,UAAU,2BAA0B,6CACxC,wBAAIA,UAAU,QAAQ4D,KAAK3B,MAAMV,KAAKqD,IAAIC,SAItD,yBAAK7E,UAAU,qCACX,yBAAKA,UAAU,oDACX,yBAAKA,UAAU,yBACX,yBAAKC,IAAI,8BAA8BD,UAAU,oBAAoBE,IAAI,kBACzE,wBAAIF,UAAU,2BAA0B,oDACxC,wBAAIA,UAAU,QAAQ4D,KAAK3B,MAAMV,KAAKqD,IAAIE,SAItD,yBAAK9E,UAAU,qCACX,yBAAKA,UAAU,uDACX,yBAAKA,UAAU,yBACX,yBAAKC,IAAI,8BAA8BD,UAAU,oBAAoBE,IAAI,kBACzE,wBAAIF,UAAU,2BAA0B,oDAAxC,KACA,wBAAIA,UAAU,QAAQ4D,KAAK3B,MAAMV,KAAKqD,IAAIG,SAItD,yBAAK/E,UAAU,qCACX,yBAAKA,UAAU,uDACX,yBAAKA,UAAU,yBACX,yBAAKC,IAAI,8BAA8BD,UAAU,oBAAoBE,IAAI,kBACzE,wBAAIF,UAAU,2BAA0B,qDACxC,wBAAIA,UAAU,QAAQ4D,KAAK3B,MAAMV,KAAKqD,IAAII,UAK1D,yBAAKhF,UAAU,OACX,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,+BACX,kBAAC,EAAD,CAAYgE,SAAUJ,KAAKqB,mBAM3C,yBAAKjF,UAAU,OACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,eACA,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,SACjB,+BACQ,4BACI,sCACA,2CACA,4CACA,4CACA,4CACA,4CACA,4CACA,+CACA,+CACA,+CACA,iDACA,iDACA,iDACA,iDACA,iDACA,mDAGR,+BACK4D,KAAK3B,MAAMV,KAAK4D,SAAWvB,KAAK3B,MAAMV,KAAK4D,QAAQC,KAAI,SAAEC,EAAMC,GAC5D,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAKG,SACV,4BAAKH,EAAKI,IACV,4BAAKJ,EAAKK,IACV,4BAAKL,EAAKM,IACV,4BAAKN,EAAKO,IACV,4BAAKP,EAAKQ,IACV,4BAAKR,EAAKS,IACV,4BAAKT,EAAKU,IACV,4BAAKV,EAAKW,IACV,4BAAKX,EAAKY,IACV,4BAAKZ,EAAKa,IACV,4BAAKb,EAAKc,IACV,4BAAKd,EAAKe,IACV,4BAAKf,EAAKgB,IACV,4BAAKhB,EAAKiB,IACV,4BAAKjB,EAAKkB,gBAatD,4BAAQvG,UAAU,UACd,yBAAKA,UAAU,+DACX,0BAAMA,UAAU,iEAAhB,uBAAiG,uBAAGU,KAAK,iCAAiC8F,IAAI,cAA7C,iBAAjG,0BACA,0BAAMxG,UAAU,8DAAhB,4BAAsG,uBAAGA,UAAU,sC,GAxIhGyE,IAAMC,W,iBCExB+B,E,YAEjB,aAAe,IAAD,8BACV,+CAEKxE,MAAQ,CACXyE,SAAU,IAAIC,MAAK,IAAIA,MAAOC,UAAS,IAAID,MAAOE,WAAa,KAC/DC,OAAQ,IAAIH,KACZI,iBAAiB,CACfC,WAAU,GAEZzF,KAAK,IATG,E,iFAaVqC,KAAK9B,Y,gKAGgBiC,EAAoB,CAACkD,KAAKrD,KAAK3B,MAAMyE,SAASnG,GAAGqD,KAAK3B,MAAM6E,S,OAA7ExF,E,OACJsC,KAAKU,SAAS,CAAC/C,KAAKD,EAASC,O,qIAEvB,IAAD,SACyCqC,KAAK3B,MAA9CyE,EADA,EACAA,SAASI,EADT,EACSA,OAAOC,EADhB,EACgBA,iBAAiBxF,EADjC,EACiCA,KAEtC,OADAG,QAAQC,IAAIJ,GAER,yBAAKvB,UAAU,cACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cACV,0BAAMA,UAAU,uDAChB,uBAAGA,UAAU,+BAFjB,cAOJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,UACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,SAEJ,kBAAC,IAAD,CAAWkH,qBAAA,EACXhF,QAAS6E,EACT7B,MAAOwB,EACP1C,SAAU,SAAA0C,GAAc,EAAKpC,SAAS,CAACoC,mBAKnD,yBAAK1G,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,OAEJ,kBAAC,IAAD,CAAWkH,qBAAA,EACXhF,QAAS6E,EACT7B,MAAO4B,EACP9C,SAAU,SAAA8C,GAAY,EAAKxC,SAAS,CAACwC,iBAKjD,yBAAK9G,UAAU,wBACX,4BAAQI,KAAK,SAAS+G,QAASvD,KAAK9B,QAAQC,KAAK6B,MAAO5D,UAAU,iDAC9D,uBAAGA,UAAU,0BAOjC,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,kBACA,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,SACb,+BACI,4BACI,sCACA,sCACA,2CACA,4CACA,4CACA,4CACA,4CACA,4CACA,+CACA,+CACA,+CACA,iDACA,iDACA,iDACA,iDACA,iDACA,mDAGR,+BACK4D,KAAK3B,MAAMV,KAAK6D,KAAI,SAAEC,EAAMC,GACzB,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAK+B,SACV,4BAAK/B,EAAKG,SACV,4BAAKH,EAAKI,IACV,4BAAKJ,EAAKK,IACV,4BAAKL,EAAKM,IACV,4BAAKN,EAAKO,IACV,4BAAKP,EAAKQ,IACV,4BAAKR,EAAKS,IACV,4BAAKT,EAAKU,IACV,4BAAKV,EAAKW,IACV,4BAAKX,EAAKY,IACV,4BAAKZ,EAAKa,IACV,4BAAKb,EAAKc,IACV,4BAAKd,EAAKe,IACV,4BAAKf,EAAKgB,IACV,4BAAKhB,EAAKiB,IACV,4BAAKjB,EAAKkB,eAWlD,4BAAQvG,UAAU,UACd,yBAAKA,UAAU,+DACX,0BAAMA,UAAU,iEAAhB,uBAAiG,uBAAGU,KAAK,iCAAiC8F,IAAI,cAA7C,iBAAjG,0BACA,0BAAMxG,UAAU,8DAAhB,4BAAsG,uBAAGA,UAAU,sC,GA1ItGyE,IAAMC,WCFtB2C,E,YAEjB,aAAe,IAAD,8BACV,+CAEKC,aAAqB,EAAKA,aAAavF,KAAlB,gBAC1B,EAAKwF,cAAqB,EAAKA,cAAcxF,KAAnB,gBAC1B,EAAKP,aAAqB,EAAKA,aAAaO,KAAlB,gBAC1B,EAAKV,YAAqB,EAAKA,YAAYU,KAAjB,gBAC1B,EAAKN,kBAAqB,EAAKA,kBAAkBM,KAAvB,gBAE1B,EAAKE,MAAQ,CACXuF,WAAW,GACXC,SAAS,CACPC,IAAI,GACJC,QAAQ,EACRC,YAAY,CACVC,UAAU,SACVC,QAAQ,EACRC,UAAU,GACVtC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAC3DC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,MAnBlC,E,iFA0BZ3C,KAAK0D,eACL1D,KAAKvC,cACLuC,KAAKnC,sB,yCAEYuG,EAAWC,GAC1B,IAAIC,EAAStE,KAAK/B,MAAMsG,MAAMnH,OAAOkH,OAClCD,EAAUG,WAAcH,EAAUG,YAAcF,GAAYF,EAAUG,MAAMnH,OAAOkH,SAAWD,EAAUG,WACzGxE,KAAK0D,iB,qCAKT1D,KAAKU,SAAS,CAAC8D,UAAUxE,KAAK/B,MAAMsG,MAAMnH,OAAOkH,W,oCAGrCG,GAAO,IAAD,EACCA,EAAMC,OAApBpE,EADa,EACbA,KAAKgB,EADQ,EACRA,MACV,GAAU,YAAPhB,GAA2B,QAAPA,EAAa,CAClC,IAAIqE,EAAM3E,KAAK3B,MAAMwF,SACrBc,EAAIrE,GAAQgB,EACZtB,KAAKU,SAAS,CAACmD,SAASc,QACrB,CACH,IAAIX,EAAchE,KAAK3B,MAAMwF,SAASG,YACpCA,EAAY1D,GAAQgB,EACpBtB,KAAKU,SAAS,CAACsD,YAAcA,O,sKAMZ7D,I,OAAjBzC,E,OACAmG,EAAW,CAAC,IAAMnG,EAASoG,IAAI,QAAUpG,EAASqG,QAAS,YAAerG,EAASsG,aACvFhE,KAAKU,SAAS,CAACmD,SAASA,I,2PAGpBlG,EAAOqC,KAAK3B,MAAMwF,SACtB1D,EAAsBxC,GACtBqC,KAAKvC,c,gRAGgB0C,I,OAAjBzC,E,OACJsC,KAAKU,SAAS,CAACkD,WAAWlG,I,qIAIxB,IAEoBkH,EAFhBN,EAAStE,KAAK3B,MAAMmG,UACpBZ,EAAa5D,KAAK3B,MAAMuF,WAgN5B,OACE,yBAAKxH,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,uDACd,uBAAGA,UAAU,+BAFjB,cAMS,WAATkI,GAzNYM,EA0NC5E,KAxNjB,yBAAK5D,UAAU,UACb,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,sBACA,0BAAMA,UAAU,eACd,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACb,4BAAQkE,KAAK,YAAYF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYC,UAAW7H,UAAU,gCAAgCQ,MAAO,CAAC8B,MAAM,UAC/J,4BAAQ4C,MAAM,UAAd,iBACA,4BAAQA,MAAM,SAAd,mBAKR,yBAAKlF,UAAU,YACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,kCAAjB,kBACA,yBAAKA,UAAU,mBACb,2BAAOkE,KAAK,UAAUF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYE,QAAS1H,KAAK,SAASJ,UAAU,sCAKpI,wBAAIA,UAAU,cAAd,qBACE,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYnC,GAAIrF,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYlC,GAAItF,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYjC,GAAIvF,KAAK,OAAOJ,UAAU,sCAK9H,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYhC,GAAIxF,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAY/B,GAAIzF,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,cACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAY9B,GAAI1F,KAAK,OAAOJ,UAAU,sCAK9H,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,kBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAY7B,GAAI3F,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,kBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAY5B,GAAI5F,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,kBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAY3B,GAAI7F,KAAK,OAAOJ,UAAU,sCAK9H,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,oBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAY1B,GAAI9F,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,oBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYzB,GAAK/F,KAAK,OAAOJ,UAAU,qCAI7H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,oBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYxB,GAAIhG,KAAK,OAAOJ,UAAU,sCAK9H,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,oBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYvB,GAAIjG,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,oBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYtB,GAAIlG,KAAK,OAAOJ,UAAU,qCAI5H,yBAAKA,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,kCAAjB,oBACA,yBAAKA,UAAU,mBACX,2BAAOkE,KAAK,KAAKF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASG,YAAYrB,GAAInG,KAAK,OAAOJ,UAAU,wCAQtI,yBAAKQ,MAAO,CAAC8B,MAAM,QAAQmG,OAAO,SAASC,cAAc,SACvD,4BAAQvB,QAASqB,EAAKhH,aAAchB,MAAO,CAACmI,QAAQ,QAAS3I,UAAU,6CAAvE,YAMZ,SAAwBwI,GACtB,OACE,yBAAKxI,UAAU,mCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,oBACA,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,cACb,2CACA,4BAAQA,UAAU,eAAekE,KAAK,MAAMF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASC,KACpGF,EAAWpC,KAAI,SAAAwD,GAAC,OACf,4BAAQrD,IAAKqD,EAAG1D,MAAO0D,GAAKA,QAIhC,yBAAK5I,UAAU,cACb,qDACA,4BAAQA,UAAU,eAAekE,KAAK,UAAUF,SAAUwE,EAAKjB,cAAerC,MAAOsD,EAAKvG,MAAMwF,SAASE,SACvG,4BAAQzC,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAIN,yBAAK1E,MAAO,CAACiI,OAAO,SAASI,UAAU,WACnC,4BAAQzI,KAAK,SAAS+G,QAASqB,EAAKhH,aAAcxB,UAAU,iCAA5D,YAmBJ8I,CAAelF,OAGrB,4BAAQ5D,UAAU,UACd,yBAAKA,UAAU,+DACX,0BAAMA,UAAU,iEAAhB,uBAAiG,uBAAGU,KAAK,iCAAiC8F,IAAI,cAA7C,iBAAjG,0BACA,0BAAMxG,UAAU,8DAAhB,4BAAsG,uBAAGA,UAAU,sC,GA5SjGyE,IAAMC,WCY7BqE,MAbf,WACE,OACE,yBAAK/I,UAAU,cACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,MAAMG,GAAG,aACpB,kFCwBG6I,MApBf,WACE,OACE,yBAAKhJ,UAAU,sBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiJ,OAAK,EAACC,KAAK,IAAIC,UAAWxE,IACjC,kBAAC,IAAD,CAAOuE,KAAK,WAAWC,UAAW1C,IAClC,kBAAC,IAAD,CAAOyC,KAAK,oBAAoBC,UAAW9B,IAC3C,kBAAC,IAAD,CAAO6B,KAAK,QAAQC,UAAWJ,IAC/B,kBAAC,IAAD,CAAOK,OAAQ,kBAAM,kBAAC,IAAD,CAAU7I,GAAI,CAAC8I,SAAU,cCVpCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCPNuB,IAASN,OAAO,kBAAC,IAAD,SAAa,kBAAC,EAAD,MAAb,KAAoCxJ,SAAS+J,eAAe,SDsHtE,kBAAmBC,WACrBA,UAAUC,cAAchK,MAAMiK,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e38ed771.chunk.js","sourcesContent":["/**\n *  Import Modules install\n */\nimport $ from 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\n\n\n/**\n *  Import Css files\n */\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './vendors/css/style.css';\nimport './vendors/css/materialdesignicons.min.css';\nimport './vendors/css/vendor.bundle.base.css';\nimport 'flatpickr/dist/themes/material_green.css' \n\n\n\n\n    function applyStylesMenuButton() {\n            if($('#sidebar').css('top')==='70px'){\n                if ($('#sidebar').hasClass(\"active\")) {\n                    $('#sidebar').css({'left':'','right':''})\n                     $('#sidebar').removeClass(\"active\")\n                }else{\n                    $('#sidebar').css({'left':0,'right':'auto'})\n                    $('#sidebar').addClass(\"active\")\n                }\n            }else{\n                if ($('body').hasClass(\"sidebar-icon-only\")) {\n                        $('body').removeClass(\"sidebar-icon-only\")\n                }else{\n                        $('body').addClass(\"sidebar-icon-only\")\n                }\n            }                   \n            \n    }\n\n\n\n    $(document).ready(()=> {\n        $(\"#menu-click-button\").click(function() {\n            applyStylesMenuButton()\n        });\n        $(\"#menu-click-button-right\").click(function() {\n            applyStylesMenuButton()\n        });\n    })\n \n\n\n\n\n","import React from 'react';\n\nfunction Header() {\n  return (\n        <nav className=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\n            <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\n                <span className=\"navbar-brand brand-logo\"><img src=\"/images/logo.svg\" alt=\"logo1\" /></span>\n                <span className=\"navbar-brand brand-logo-mini\" id=\"menu-click-button-right\"><img src=\"/images/logo-mini.svg\" alt=\"logo2\" /></span>\n            </div>\n            <div className=\"navbar-menu-wrapper d-flex align-items-stretch\">\n            <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\n                <span id=\"menu-click-button\" className=\"mdi mdi-menu\"></span>\n            </button>           \n            \n            <button  className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\n                <i className=\"mdi mdi-power\"></i>\n            </button>\n            </div>\n        </nav>\n\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  return (\n            <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item nav-profile\">\n                        <span className=\"nav-link\">\n                            <div className=\"nav-profile-image\">\n                            <img src=\"/images/faces/face1.jpg\" alt=\"profile\"/>\n                            <span className=\"login-status online\"></span>\n                            </div>\n                            <div className=\"nav-profile-text d-flex flex-column\">\n                            <span className=\"font-weight-bold mb-2\">David Grey. H</span>\n                            <span className=\"text-secondary text-small\">Project Manager</span>\n                            </div>\n                            <i className=\"mdi mdi-bookmark-check text-success nav-profile-badge\"></i>\n                        </span>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/dashboard\" style={{textDecoration:'none'}}> \n                            <span className=\"nav-link\">\n                                <span className=\"menu-title\">Dashboard</span>\n                                <i className=\"mdi mdi-chart-bar menu-icon\"></i>\n                            </span>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/history\" style={{textDecoration:'none'}}> \n                            <span className=\"nav-link\">\n                                <span className=\"menu-title\">History</span>\n                                <i className=\"mdi mdi-file-document-box menu-icon\"></i>\n                            </span>\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#ui-basic\" aria-expanded=\"false\" aria-controls=\"ui-basic\" >\n                    \n                            <span className=\"menu-title\">Settings</span>\n                            <i className=\"menu-arrow\"></i>\n                            <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n                        </a>\n                        <div className=\"collapse show\" id=\"ui-basic\">\n                            <ul className=\"nav flex-column sub-menu\">                            \n                                <li className=\"nav-item\"> \n                                    <Link to=\"/settings/general\" style={{textDecoration:'none'}}> \n                                        <span className=\"nav-link\">General Setting</span>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\"> \n                                    <Link to=\"/settings/modbus\" style={{textDecoration:'none'}}> \n                                        <span className=\"nav-link\">Modbus</span>\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </li>\n                   \n                </ul>\n            </nav>   \n  );\n}\n\nexport default Sidebar;\n","const axios = require('axios');\n\nexport const getHistory = async function(params) {\n    return await axios.post(\"/api/history\",params)\n};\n\nexport const getDashboard = async function() {\n    try {\n        return await axios.get(\"/api/dashboard\")\n      } catch (error) {\n        return null\n      }\n    //return await axios.get(\"/api/dashboard\")\n};\n\nexport const getSettings = async function() {    \n    let response = await axios.get(\"/api/settings\");\n    return response.data;    \n};\n\nexport const saveSettings = async function(data) {\n    let response = await axios.post(\"/api/settings\",data);\n    return response.data;\n\n};\n\nexport const getListSerialPort = async function() {    \n    let response = await axios.get(\"/api/serial-port\");\n    console.log('ØØØ>   ',response.data)\n    return response.data;    \n};","import React from 'react';\nimport Chart from 'react-apexcharts'\nimport * as Services from '../Services';\n\nexport default class MixedChart extends React.Component {\n      \n    constructor(props) {\n      super(props);\n      this.getData = this.getData.bind(this);\n      this.interval = null;\n      this.state = {\n        options: {\n          dataLabels: {\n            enabled: false\n          },\n\n          stroke: {\n            width: [1, 1, 4]\n          },\n          title: {\n            text: 'Average Power Consumption By Hours',\n            align: 'center',\n            offsetX: 0\n          },\n          xaxis: {\n            categories: [],\n          },\n          yaxis: [\n            {\n              axisTicks: {\n                show: true,\n              },\n              axisBorder: {\n                show: true,\n                color: '#008FFB'\n              },\n              labels: {\n                style: {\n                  color: '#008FFB',\n                }\n              },\n              title: {\n                text: \"Active Power W\",\n                style: {\n                  color: '#008FFB',\n                }\n              },\n              tooltip: {\n                enabled: true\n              }\n            },\n\n            {\n              seriesName: 'Income',\n              opposite: true,\n              axisTicks: {\n                show: true,\n              },\n              axisBorder: {\n                show: true,\n                color: '#00E396'\n              },\n              labels: {\n                style: {\n                  color: '#00E396',\n                }\n              },\n              title: {\n                text: \"Reactive Power VAR\",\n                style: {\n                  color: '#00E396',\n                }\n              },\n            },\n            \n            {\n              seriesName: 'Revenue',\n              opposite: true,\n              axisTicks: {\n                show: true,\n              },\n              axisBorder: {\n                show: true,\n                color: '#FEB019'\n              },\n              labels: {\n                style: {\n                  color: '#FEB019',\n                },\n              },\n              title: {\n                text: \"Apparent Power VA\",\n                style: {\n                  color: '#FEB019',\n                }\n              }\n            },\n          ],\n          tooltip: {\n            fixed: {\n              enabled: true,\n              position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n              offsetY: 30,\n              offsetX: 60\n            },\n          },\n          legend: {\n            horizontalAlign: 'left',\n            offsetX: 40\n          }\n        },\n        series: [],\n      }\n    }\n    componentDidMount() {\n        this.getData();\n        this.interval = setInterval(this.getData,30000);\n\n    };\n    componentWillUnmount() {\n      clearInterval(this.interval);\n    };\n    async getData(){\n        let response = await Services.getDashboard()\n        if(response && response.data){\n          this.props.onChange(response.data);\n          let graph = response.data.graph  ;     \n          let series = this.state.series;\n          series = [{\n              name: 'Active E',\n              type: 'column',\n              data: graph.data.p\n            }, {\n              name: 'Reactive E',\n              type: 'column',\n              data: graph.data.q\n            }, {\n              name: 'Apparent E',\n              type: 'column',\n              data: graph.data.s\n          }] \n          this.setState(\n            {\n              options: {\n              xaxis: {\n                  categories: graph.hours\n                }\n              },\n              series:series\n            }\n          )\n        }                \n    }\n    render() {\n      return (       \n        <div id=\"chart\">\n          <Chart options={this.state.options} series={this.state.series} type=\"line\" height=\"350\" />\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport MixedChart from './charts/chart';\n\nexport default class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data:{top:{sumI:0,sumP:0,sumQ:0,sumS:0}}\n        }\n        this.handleChange = this.handleChange.bind(this)\n       \n    }\n    handleChange(value){\n        this.setState({data:value})\n    } \n\n    render() {\n\n        return (   \n        <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        <span className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n                        <i className=\"mdi  mdi-chart-bar\"></i>\n                        </span> Dashboard </h3>\n                 \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-3 stretch-card grid-margin\">\n                        <div className=\"card bg-gradient-danger card-img-holder text-white\">\n                            <div className=\"card-body text-center\">\n                                <img src=\"images/dashboard/circle.svg\" className=\"card-img-absolute\" alt=\"1circle\" />\n                                <h4 className=\"font-weight-normal mb-3\"><b>Total Current</b></h4>\n                                <h2 className=\"mb-5\">{this.state.data.top.sumI}</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3 stretch-card grid-margin\">\n                        <div className=\"card bg-gradient-info card-img-holder text-white\">\n                            <div className=\"card-body text-center\">\n                                <img src=\"images/dashboard/circle.svg\" className=\"card-img-absolute\" alt=\"circle-image2\" />\n                                <h4 className=\"font-weight-normal mb-3\"><b>Total Active Energy </b></h4>\n                                <h2 className=\"mb-5\">{this.state.data.top.sumP}</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3 stretch-card grid-margin\">\n                        <div className=\"card bg-gradient-success card-img-holder text-white\">\n                            <div className=\"card-body text-center\">\n                                <img src=\"images/dashboard/circle.svg\" className=\"card-img-absolute\" alt=\"circle-image3\" />\n                                <h4 className=\"font-weight-normal mb-3\"><b>Total Reactive Energy</b> </h4>\n                                <h2 className=\"mb-5\">{this.state.data.top.sumQ}</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3 stretch-card grid-margin\">\n                        <div className=\"card bg-gradient-success card-img-holder text-white\">\n                            <div className=\"card-body text-center\">\n                                <img src=\"images/dashboard/circle.svg\" className=\"card-img-absolute\" alt=\"circle-image4\" />\n                                <h4 className=\"font-weight-normal mb-3\"><b>Total Apparent Energy</b></h4>\n                                <h2 className=\"mb-5\">{this.state.data.top.sumS}</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body chart-padding-new\">                            \n                                <MixedChart onChange={this.handleChange} />\n                            </div>\n                        </div>\n                    </div>          \n                </div>\n              \n                <div className=\"row\">\n                    <div className=\"col-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Recent Data</h4>\n                                <div className=\"table-responsive\">\n                                    <table className=\"table\">\n                                    <thead>\n                                            <tr>\n                                                <th> Time </th>\n                                                <th> Voltage V1</th>\n                                                <th> Voltage V2 </th>\n                                                <th> Voltage V3 </th>\n                                                <th> Current I1 </th>\n                                                <th> Current I2 </th>\n                                                <th> Current I3 </th>\n                                                <th> Active Power 1</th>\n                                                <th> Active Power 2</th>\n                                                <th> Active Power 3</th>\n                                                <th> Reactive Power 1</th>\n                                                <th> Reactive Power 2</th>\n                                                <th> Reactive Power 3</th>\n                                                <th> Apparent Power 1</th>\n                                                <th> Apparent Power 2</th>\n                                                <th> Apparent Power 3</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.data.history && this.state.data.history.map(( item, index ) => {\n                                                return (\n                                                    <tr key={index}>\n                                                        <td>{item.time_at}</td>\n                                                        <td>{item.v1}</td>\n                                                        <td>{item.v2}</td>\n                                                        <td>{item.v3}</td>\n                                                        <td>{item.i1}</td>\n                                                        <td>{item.i2}</td>\n                                                        <td>{item.i3}</td>\n                                                        <td>{item.p1}</td>\n                                                        <td>{item.p2}</td>\n                                                        <td>{item.p3}</td>\n                                                        <td>{item.q1}</td>\n                                                        <td>{item.q2}</td>\n                                                        <td>{item.q3}</td>\n                                                        <td>{item.s1}</td>\n                                                        <td>{item.s2}</td>\n                                                        <td>{item.s3}</td>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>                \n                \n            </div>\n            <footer className=\"footer\">\n                <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\n                    <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2017 <a href=\"https://www.bootstrapdash.com/\" rel=\"noreferrer\">BootstrapDash</a>. All rights reserved.</span>\n                    <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i className=\"mdi mdi-heart text-danger\"></i></span>\n                </div>\n            </footer>\n        </div>\n    \n    )};\n}\n\n","import React from 'react';\nimport Flatpickr from 'react-flatpickr'\nimport * as Services from './Services';\n\n\nexport default class History extends React.Component {\n\n    constructor() {\n        super();\n     \n        this.state = {\n          dateFrom: new Date(new Date().setHours(new Date().getHours() - 12)),\n          dateTo: new Date(),\n          FlatpickrOptions:{\n            time_24hr:true\n          },\n          data:[]\n        };\n    };\n    componentDidMount() {\n        this.getData()\n    };\n    async getData(){\n        let response = await Services.getHistory({from:this.state.dateFrom,to:this.state.dateTo})\n        this.setState({data:response.data})      \n    }\n    render() {\n        let {dateFrom,dateTo,FlatpickrOptions,data} = this.state;\n        console.log(data)\n        return (\n            <div className=\"main-panel\">\n                <div className=\"content-wrapper\">\n                    <div className=\"page-header \">\n                        <h3 className=\"page-title\">\n                            <span className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n                            <i className=\"mdi mdi-file-document-box\"></i>\n                            </span> History </h3>\n                        \n                    </div>\n                    \n                    <div className=\"col-md-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Filter</h4>\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"form-group\">\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\">From</span>\n                                            </div>\n                                            <Flatpickr data-disable-time \n                                            options={FlatpickrOptions}\n                                            value={dateFrom}\n                                            onChange={dateFrom => { this.setState({dateFrom}) }} \n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-5\">\n                                    <div className=\"form-group\">\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\">To</span>\n                                            </div>\n                                            <Flatpickr data-disable-time \n                                            options={FlatpickrOptions}\n                                            value={dateTo}\n                                            onChange={dateTo => { this.setState({dateTo}) }} \n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-2 text-center\">                            \n                                    <button type=\"button\" onClick={this.getData.bind(this)} className=\"btn btn-gradient-primary btn-rounded btn-icon\">\n                                        <i className=\"mdi mdi-magnify\"></i>\n                                    </button>\n                                </div>      \n                            </div>             \n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Recent Tickets</h4>\n                                <div className=\"table-responsive\">\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th> Date </th>\n                                                <th> Time </th>\n                                                <th> Voltage V1</th>\n                                                <th> Voltage V2 </th>\n                                                <th> Voltage V3 </th>\n                                                <th> Current I1 </th>\n                                                <th> Current I2 </th>\n                                                <th> Current I3 </th>\n                                                <th> Active Power 1</th>\n                                                <th> Active Power 2</th>\n                                                <th> Active Power 3</th>\n                                                <th> Reactive Power 1</th>\n                                                <th> Reactive Power 2</th>\n                                                <th> Reactive Power 3</th>\n                                                <th> Apparent Power 1</th>\n                                                <th> Apparent Power 2</th>\n                                                <th> Apparent Power 3</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.data.map(( item, index ) => {\n                                                return (\n                                                    <tr key={index}>\n                                                        <td>{item.date_at}</td>\n                                                        <td>{item.time_at}</td>\n                                                        <td>{item.v1}</td>\n                                                        <td>{item.v2}</td>\n                                                        <td>{item.v3}</td>\n                                                        <td>{item.i1}</td>\n                                                        <td>{item.i2}</td>\n                                                        <td>{item.i3}</td>\n                                                        <td>{item.p1}</td>\n                                                        <td>{item.p2}</td>\n                                                        <td>{item.p3}</td>\n                                                        <td>{item.q1}</td>\n                                                        <td>{item.q2}</td>\n                                                        <td>{item.q3}</td>\n                                                        <td>{item.s1}</td>\n                                                        <td>{item.s2}</td>\n                                                        <td>{item.s3}</td>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>            \n                <footer className=\"footer\">\n                    <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\n                        <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2017 <a href=\"https://www.bootstrapdash.com/\" rel=\"noreferrer\">BootstrapDash</a>. All rights reserved.</span>\n                        <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i className=\"mdi mdi-heart text-danger\"></i></span>\n                    </div>\n                </footer>\n            </div>\n        \n        );\n    }\n}\n\n","import React from 'react';\nimport * as Services from './Services';\n\nexport default class Settings extends React.Component {\n\n    constructor() {\n        super();\n        \n        this.optionChange       = this.optionChange.bind(this);\n        this.changeHandler      = this.changeHandler.bind(this);\n        this.saveSettings       = this.saveSettings.bind(this);\n        this.getSettings        = this.getSettings.bind(this);\n        this.getListSerialPort  = this.getListSerialPort.bind(this);\n\n        this.state = { \n          serialPort:[], \n          settings:{\n            usb:'',\n            refresh:1,        \n            modbusCodes:{\n              powerType:'single',\n              address:0,\n              frequency:'',\n              v1:'', v2:'', v3:'', i1:'', i2:'', i3:'', p1:'', p2:'', p3:'', \n              q1:'', q2:'', q3:'', s1:'', s2:'', s3:''\n            }\n          }\n        };\n    };\n\n    componentDidMount() {      \n      this.optionChange();\n      this.getSettings();\n      this.getListSerialPort();\n    };\n    componentDidUpdate(nextProps, prevState) {\n        let option = this.props.match.params.option;\n        if(prevState.urlOption && (prevState.urlOption !== option) && (nextProps.match.params.option === prevState.urlOption) ){\n          this.optionChange()\n        }\n    }\n\n    optionChange(){\n      this.setState({urlOption:this.props.match.params.option}) \n    }\n\n    changeHandler(event){\n      let {name,value} = event.target;\n      if(name==='refresh' || name==='usb'){\n        let set = this.state.settings;\n        set[name] = value;\n        this.setState({settings:set});       \n      }else{\n        let modbusCodes = this.state.settings.modbusCodes;\n          modbusCodes[name] = value;   \n          this.setState({modbusCodes : modbusCodes });       \n      }\n      \n    }\n\n    async getSettings(){\n      let response = await Services.getSettings();\n      let settings = {'usb':response.usb,'refresh':response.refresh, 'modbusCodes': response.modbusCodes }\n      this.setState({settings:settings});\n    }\n    async saveSettings(){\n      let data = this.state.settings;\n      Services.saveSettings(data);\n      this.getSettings();\n    }\n    async getListSerialPort(){\n      let response = await Services.getListSerialPort();\n      this.setState({serialPort:response});\n    }\n    \n    render() {\n        let option = this.state.urlOption;\n        let serialPort = this.state.serialPort;\n        function modbuscode(that){\n          return (            \n            <div className=\"col-12\">\n              <div className=\"card\">\n                  <div className=\"card-body\">\n                      <h4 className=\"card-title\">Device Information</h4>\n                      <form className=\"form-sample\">\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group row\">\n                              <label className=\"col-form-label new-label-width\">Power Type</label>\n                              <div className=\"new-input-width\">\n                                <select name=\"powerType\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.powerType} className=\"form-control new-border-input\" style={{width:'150px'}}>\n                                  <option value=\"single\">Single Phase </option>\n                                  <option value=\"three\">Three Phase</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group row\">\n                              <label className=\"col-form-label new-label-width\">Device Address</label>\n                              <div className=\"new-input-width\" >\n                                <input name=\"address\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.address} type=\"number\" className=\"form-control new-border-input\" />\n                              </div>\n                            </div>\n                          </div>                          \n                        </div>\n                        <h4 className=\"card-title\">Modbus Codes List</h4>\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Voltage V1</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"v1\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.v1} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Voltage V2</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"v2\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.v2} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Voltage V3</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"v3\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.v3} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Current I1</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"i1\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.i1} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Current I2</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"i2\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.i2} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Current I3</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"i3\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.i3} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Active Power 1</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"p1\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.p1} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Active Power 2</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"p2\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.p2} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Active Power 3</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"p3\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.p3} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Reactive Power 1</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"q1\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.q1} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Reactive Power 2</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"q2\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.q2}  type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Reactive Power 3</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"q3\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.q3} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Apparent Power 1</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"s1\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.s1} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Apparent Power 2</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"s2\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.s2} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-form-label new-label-width\">Apparent Power 3</label>\n                                    <div className=\"new-input-width\">\n                                        <input name=\"s3\" onChange={that.changeHandler} value={that.state.settings.modbusCodes.s3} type=\"text\" className=\"form-control new-border-input\" />\n                                    </div>\n                                </div>\n                            </div>\n                          </div>\n\n                      </form>\n                  </div>\n                  <div style={{width:'100px',margin:'0 auto',paddingBottom:'30px'}} >\n                    <button onClick={that.saveSettings} style={{padding:'20px'}} className=\"btn btn-block btn-lg btn-gradient-primary\">SAVE</button>\n                  </div>\n              </div>\n            </div>\n          )\n        }\n        function generalSetting(that){\n          return (\n            <div className=\"col-12 grid-margin stretch-card\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">General Settings</h4>\n                  <form className=\"forms-sample\">\n                    <div className=\"form-group\">\n                      <label>USB Port</label>\n                      <select className=\"form-control\" name=\"usb\" onChange={that.changeHandler} value={that.state.settings.usb}>\n                      {serialPort.map(i => \n                        <option key={i} value={i} >{i}</option>\n                      )}\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Refresh Time (min)</label>\n                      <select className=\"form-control\" name=\"refresh\" onChange={that.changeHandler} value={that.state.settings.refresh}>\n                        <option value=\"1\" >1</option>\n                        <option value=\"3\" >3</option>\n                        <option value=\"5\" >5</option>\n                        <option value=\"10\" >10</option>\n                        <option value=\"15\" >15</option>\n                        <option value=\"30\" >30</option>\n                        <option value=\"60\" >60</option>\n                        <option value=\"120\" >120</option>\n                        <option value=\"180\" >180</option>\n                      </select>\n                    </div>                   \n                  </form>\n                  <div style={{margin:'0 auto',textAlign:'center'}} >\n                      <button type=\"submit\" onClick={that.saveSettings} className=\"btn btn-gradient-primary mr-2\">SAVE</button>\n                    </div>\n                </div>\n              </div>\n            </div>\n         )\n        }\n        return (\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"page-header \">\n                <h3 className=\"page-title\">\n                  <span className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n                    <i className=\"mdi mdi-file-document-box\"></i>\n                  </span> Settings \n                </h3>\n              </div>\n              { option==='modbus'\n                ? modbuscode(this)\n                : generalSetting(this)\n              }\n            </div>\n            <footer className=\"footer\">\n                <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\n                    <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2017 <a href=\"https://www.bootstrapdash.com/\" rel=\"noreferrer\">BootstrapDash</a>. All rights reserved.</span>\n                    <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i className=\"mdi mdi-heart text-danger\"></i></span>\n                </div>\n            </footer>\n          </div>\n            \n        )\n    }\n}","import React from 'react';\n\nfunction Test() {\n  return (\n    <div className=\"main-panel\">\n        <div className=\"content-wrapper\">\n        <div className=\"row\" id=\"proBanner\">\n            <span>ssssssssssssssssssssssssssssssssssssssssssss</span>\n        </div>\n        </div>\n    </div>\n   \n  );\n}\n\nexport default Test;\n","import React from 'react';\nimport { Switch, Route,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Header from './modules/Header';\nimport Sidebar from './modules/Sidebar'\nimport Dashboard from './modules/Dashboard';\nimport History from './modules/History';\nimport Settings from './modules/Settings';\n\nimport Test from './modules/test'\n\nfunction App() {\n  return (\n    <div className=\"container-scroller\">\n      <Header/>\n      <div className=\"container-fluid page-body-wrapper\">\n        <Sidebar/>       \n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/history' component={History}/>\n          <Route path='/settings/:option' component={Settings}/>\n          <Route path='/test' component={Test}/>\n          <Route render={() => <Redirect to={{pathname: \"/\"}} />} />\n\n        </Switch>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './import_styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { BrowserRouter,HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(<HashRouter> <App /> </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}